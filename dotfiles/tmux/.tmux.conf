# Tmux Configuration
# Minimal, practical tmux setup for backend and DevOps workflows
# Compatible with macOS Terminal, VS Code, iTerm2, SSH sessions

# ==============================
# Basic Settings
# ==============================

# Set prefix to Ctrl-a (more intuitive)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Enable mouse support
set -g mouse on

# Large scrollback buffer for logs
set -g history-limit 10000

# UTF-8 support
set -q -g status-utf8 on
setw -q -g utf8 on

# Renumber windows automatically
set -g renumber-windows on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# ==============================
# Key Bindings
# ==============================

# Custom split bindings for better UX
bind ` split-window -h    # Ctrl-a ` for vertical split
bind - split-window -v    # Ctrl-a - for horizontal split

# Keep default bindings too
# Ctrl-a % for vertical split
# Ctrl-a " for horizontal split

# Alt + arrow keys for pane navigation (no prefix needed)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Vi-style copy mode keys (future expansion ready)
setw -g mode-keys vi

# ==============================
# Mouse Behavior
# ==============================

# Mouse scroll in copy mode
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# ==============================
# Terminal and Display
# ==============================

# Terminal settings - fix escape sequences
set -g default-terminal "tmux-256color"

# Fix for tmux colors and escape sequences
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides ",xterm-256color:Tc"

# Disable automatic window renaming that causes escape sequences
set -g allow-rename off
set -g automatic-rename off

# Window and pane numbering
set -g display-panes-time 800
set -g display-time 1000

# ==============================
# Status Bar (Simple)
# ==============================

# Basic status bar
set -g status-interval 10
set -g status-left-length 20
set -g status-right-length 40

# Simple status line
set -g status-left '[#S] '
set -g status-right '#H %H:%M %d-%b-%y'

# ==============================
# Session Management
# ==============================

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# ==============================
# Plugin Management
# ==============================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Plugin settings
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'

# ==============================
# Compatibility Settings
# ==============================

# No aggressive resize (better for multiple clients)
setw -g aggressive-resize off

# Set escape time to 0 for better Vi/Neovim experience
set -sg escape-time 0

# Focus events enabled for terminal vim
set -g focus-events on

# ==============================
# Platform-specific adjustments
# ==============================

# macOS clipboard integration
if-shell "uname | grep -q Darwin" {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'pbcopy'
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'
}

# Linux clipboard integration
if-shell "uname | grep -q Linux" {
    bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
    bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
}

# ==============================
# Plugin Initialization (must be at the very bottom)
# ==============================

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'